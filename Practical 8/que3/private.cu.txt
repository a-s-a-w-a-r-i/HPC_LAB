%%cu
#include<stdio.h>
#include<cuda.h>
//private

_global_ void arradd(int *x,int *y,int *z){
	int index=blockIdx.x;
  z[index]=x[index]+y[index];
  printf("%d,%d,%d",x[index],y[index],z[index]);
}

int main(){

	int n;
	printf("Enter Size of the vector:");
	scanf("%d",&n);
	int a[n];
	int b[n];
	int c[n];
	int *x,*y,*z;
	int i;
	printf("Enter the 1st vector space:");
	for( i=0;i<n;i++){
		scanf("%d",&a[i]);
	}
	printf("Enter the 2st vector space:");
	for( i=0;i<n;i++){
		scanf("%d",&b[i]);
	}
	cudaMalloc((void**)&x,n*sizeof(int));
	cudaMalloc((void**)&y,n*sizeof(int));
	cudaMalloc((void**)&z,n*sizeof(int));
	cudaMemcpy(x,a,n*sizeof(int),cudaMemcpyHostToDevice);
	cudaMemcpy(y,b,n*sizeof(int),cudaMemcpyHostToDevice);
  arradd<<<n,1>>>(x,y,z);

    cudaMemcpy(c,z,n*sizeof(int),cudaMemcpyDeviceToHost);
    printf("Addition of two vectors:");
    for(i=0;i<n;i++){
    	printf("%d\t",c[i]);
    }
    cudaFree(x);
    cudaFree(y);
    cudaFree(z);
    return 0;

}